version: '3.9'

services:

  metadb:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: "db"
      POSTGRES_USER: "root"
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5

  service:
    build: 
      context: .
      dockerfile: ./Dockerfile.service
    ports:
      - "8080:8080"
    volumes:
      - service-volume:/app
    depends_on:
      metadb:
        condition: service_healthy
      storage1:
        condition: service_started
      storage2:
        condition: service_started
      storage3:
        condition: service_started
    deploy:
      resources:
        reservations:
          cpus: '1'
          memory: 2G

  storage1:
    build: 
      context: .
      dockerfile: ./Dockerfile.storage
    ports:
      - "8081"
    volumes:
      - storage1-volume:/app

  storage2:
    build: 
      context: .
      dockerfile: ./Dockerfile.storage
    ports:
      - "8081"
    volumes:
      - storage2-volume:/app

  storage3:
    build: 
      context: .
      dockerfile: ./Dockerfile.storage
    ports:
      - "8081"
    volumes:
      - storage3-volume:/app

  storage4:
    build: 
      context: .
      dockerfile: ./Dockerfile.storage
    ports:
      - "8081"
    volumes:
      - storage4-volume:/app

  storage5:
    build: 
      context: .
      dockerfile: ./Dockerfile.storage
    ports:
      - "8081"
    volumes:
      - storage5-volume:/app

  storage6:
    build: 
      context: .
      dockerfile: ./Dockerfile.storage
    ports:
      - "8081"
    volumes:
      - storage6-volume:/app

  storage7:
    build: 
      context: .
      dockerfile: ./Dockerfile.storage
    ports:
      - "8081"
    volumes:
      - storage7-volume:/app

  storage8:
    build: 
      context: .
      dockerfile: ./Dockerfile.storage
    ports:
      - "8081"
    volumes:
      - storage8-volume:/app

volumes:
  pg-data:
  storage1-volume:
  storage2-volume:
  storage3-volume:
  storage4-volume:
  storage5-volume:
  storage6-volume:
  storage7-volume:
  storage8-volume:
  service-volume: